import{a as r}from"./audioManager.NZJ33dCK.js";import"./_commonjsHelpers.C4iS2aBk.js";class o{progressBar;progressFill;handle;currentTimeEl;durationEl;soundId;soundFile;isDragging=!1;animationFrameId=null;lastSeek=0;constructor(e){this.progressBar=e,this.soundId=e.dataset.soundId||"",this.soundFile=e.dataset.soundFile||"",this.progressFill=e.querySelector(".progress-fill"),this.handle=e.querySelector(".handle"),this.currentTimeEl=e.parentElement?.querySelector(".current-time"),this.durationEl=e.parentElement?.querySelector(".duration"),this.validateAndInitialize()}validateAndInitialize(){if(!this.progressBar||!this.progressFill||!this.handle||!this.currentTimeEl||!this.durationEl||!this.soundFile){console.error("Required elements not found for progress bar");return}this.initializeEventListeners(),this.startProgressTracking()}formatTime(e){if(isNaN(e)||!isFinite(e))return"0:00";const t=Math.floor(e/60),i=Math.floor(e%60);return`${t}:${i.toString().padStart(2,"0")}`}updateProgressBar(e){e=Math.max(0,Math.min(100,e)),requestAnimationFrame(()=>{this.progressFill.style.width=`${e}%`,this.handle.style.left=`${e}%`})}updateTimeDisplay(e,t){requestAnimationFrame(()=>{this.currentTimeEl.textContent=this.formatTime(e),this.durationEl.textContent=this.formatTime(t)})}async getCurrentSound(){try{return this.soundFile===r.getCurrentSoundId()?await r.getSound(this.soundFile,this.soundId):null}catch(e){return console.error("Error getting current sound:",e),null}}async seekAudio(e){const t=await this.getCurrentSound();if(!t)return;const i=t.duration();if(i){const s=i*(e/100);Math.abs(s-this.lastSeek)>.5&&(t.seek(s),this.lastSeek=s,this.updateTimeDisplay(s,i))}}handleMouseDown=e=>{e.preventDefault(),this.isDragging=!0,this.handle.style.opacity="1",this.updateFromMouseEvent(e),document.addEventListener("mousemove",this.handleMouseMove),document.addEventListener("mouseup",this.handleMouseUp)};handleMouseMove=e=>{this.isDragging&&this.updateFromMouseEvent(e)};handleMouseUp=()=>{this.isDragging&&(this.isDragging=!1,r.isPlaying()||(this.handle.style.opacity="0"),document.removeEventListener("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp))};updateFromMouseEvent(e){const t=this.progressBar.getBoundingClientRect(),s=Math.max(0,Math.min(e.clientX-t.left,t.width))/t.width*100;this.updateProgressBar(s),this.seekAudio(s)}initializeEventListeners(){this.progressBar.addEventListener("mousedown",this.handleMouseDown),document.addEventListener("audioend",e=>{const t=e;t.detail.soundId===this.soundId&&(this.updateProgressBar(0),this.updateTimeDisplay(0,t.detail.duration||0),this.handle.style.opacity="0")})}async updateProgress(){if(this.isDragging)return;const e=await this.getCurrentSound();if(!e?.playing())return;const t=e.seek(),i=e.duration();if(i>0){const s=t/i*100;this.updateProgressBar(s),this.updateTimeDisplay(t,i),this.handle.style.opacity="1"}}startProgressTracking(){const e=async()=>{await this.updateProgress(),this.animationFrameId=requestAnimationFrame(e)};this.animationFrameId=requestAnimationFrame(e)}cleanup(){this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.progressBar.removeEventListener("mousedown",this.handleMouseDown),document.removeEventListener("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp)}}document.querySelectorAll(".progress-bar[data-sound-id]").forEach(n=>{n instanceof HTMLElement&&n.dataset.soundId&&new o(n)});
