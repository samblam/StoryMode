---
import { getClient } from '../lib/supabase';
import Layout from '../layouts/Layout.astro';
import { getCurrentUser } from '../utils/authUtils';
import type { AuthError } from '../types/auth';

// Get current user
const user = await getCurrentUser(Astro.cookies);
const isAuthenticated = Boolean(user);
const supabase = getClient({ requiresAdmin: true });

const bucketName = 'videos';
const filePath = '1da51711-0e7a-48b3-9738-423cb55fdd71/video.mp4';

let videoUrl = null;
let errorMessage = null;

if (isAuthenticated) {
  console.log('Attempting to access video from Supabase storage...');
  
  try {
    const { data, error } = await supabase
      .storage
      .from(bucketName)
      .createSignedUrl(filePath, 3600); // 1 hour expiration

    if (error) {
      console.error('Error accessing video:', error.message);
      errorMessage = error.message;
    } else if (data) {
      console.log('Video found! Signed URL:', data.signedUrl);
      videoUrl = data.signedUrl;
    } else {
      console.log('Video not found');
      errorMessage = 'Video not found in storage';
    }
  } catch (err: unknown) {
    const error = err as AuthError;
    console.error('Unexpected error:', error);
    errorMessage = error.message || 'An unexpected error occurred';
  }
}
---

<Layout title="Video Access Test | Story Mode">
  <main class="min-h-screen bg-gray-100 py-12">
    <div class="max-w-6xl mx-auto px-4">
      <h1 class="text-6xl font-editorial mb-8">Video Access Test</h1>

      {!isAuthenticated && (
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
          <strong class="font-bold">Authentication Required</strong>
          <span class="block sm:inline"> Please <a href="/login" class="underline">log in</a> to test video access.</span>
        </div>
      )}

      {isAuthenticated && errorMessage && (
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
          <strong class="font-bold">Error:</strong>
          <span class="block sm:inline"> {errorMessage}</span>
        </div>
      )}

      {isAuthenticated && videoUrl && (
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
          <strong class="font-bold">Success!</strong>
          <span class="block sm:inline"> Video found at: <a href={videoUrl} target="_blank" class="underline">View Video</a></span>
        </div>
      )}

      {isAuthenticated && !videoUrl && !errorMessage && (
        <div class="bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative" role="alert">
          <strong class="font-bold">Testing...</strong>
          <span class="block sm:inline"> Check browser console for results</span>
        </div>
      )}
    </div>
  </main>
</Layout>