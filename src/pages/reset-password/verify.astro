---
import Layout from '../../layouts/Layout.astro';

// Redirect if already logged in
const user = Astro.locals.user;
if (user) {
  return Astro.redirect('/sounds');
}

// Get email from URL params
const email = Astro.url.searchParams.get('email');
if (!email) {
  return Astro.redirect('/reset-password');
}
---

<Layout title="Verify Reset Code | Story Mode">
  <main class="min-h-screen bg-gray-50 py-12">
    <div class="max-w-6xl mx-auto px-4">
      <div class="flex flex-col items-center justify-center min-h-[calc(100vh-16rem)]">
        <div class="mb-12 text-center">
          <h1 class="text-5xl font-editorial mb-4">Verify Reset Code</h1>
          <p class="text-xl text-gray-600">Enter the code sent to your email and choose a new password</p>
        </div>

        <div class="w-full max-w-md bg-white rounded-lg shadow-lg p-8">
          <form id="verify-form" class="space-y-6">
            <input type="hidden" id="email" name="email" value={email} />
            
            <div>
              <label for="code" class="block text-lg mb-2">Reset Code</label>
              <input
                type="text"
                id="code"
                name="code"
                required
                minlength="6"
                maxlength="6"
                pattern="[0-9]{6}"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-400 text-center text-2xl tracking-widest"
                placeholder="000000"
              />
              <p class="text-sm text-gray-600 mt-1">Enter the 6-digit code sent to your email</p>
            </div>

            <div>
              <label for="password" class="block text-lg mb-2">New Password</label>
              <input
                type="password"
                id="password"
                name="password"
                required
                minlength="8"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-400"
                placeholder="Minimum 8 characters"
              />
            </div>

            <div>
              <label for="confirmPassword" class="block text-lg mb-2">Confirm Password</label>
              <input
                type="password"
                id="confirmPassword"
                name="confirmPassword"
                required
                minlength="8"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-400"
                placeholder="Minimum 8 characters"
              />
            </div>

            <div id="form-status" class="hidden">
              <p class="success hidden text-green-600 bg-green-50 p-3 rounded-lg"></p>
              <p class="error hidden text-red-600 bg-red-50 p-3 rounded-lg"></p>
            </div>

            <button
              type="submit"
              class="w-full bg-green-400 text-white px-8 py-3 rounded-lg text-lg hover:bg-green-500 transition-colors"
            >
              Reset Password
            </button>

            <div class="text-center">
              <a href="/reset-password" class="text-blue-600 hover:underline">Request New Code</a>
            </div>
          </form>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  const form = document.getElementById('verify-form') as HTMLFormElement;
  const formStatus = document.getElementById('form-status');
  const successMessage = formStatus?.querySelector('.success');
  const errorMessage = formStatus?.querySelector('.error');

  // Format code input
  const codeInput = document.getElementById('code') as HTMLInputElement;
  codeInput?.addEventListener('input', (e) => {
    const input = e.target as HTMLInputElement;
    input.value = input.value.replace(/\D/g, '').slice(0, 6);
  });

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Reset status messages
    formStatus?.classList.add('hidden');
    successMessage?.classList.add('hidden');
    errorMessage?.classList.add('hidden');

    // Disable submit button
    const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    submitButton.disabled = true;
    submitButton.textContent = 'Verifying...';

    try {
      const formData = new FormData(form);
      const email = formData.get('email')?.toString();
      const code = formData.get('code')?.toString();
      const password = formData.get('password')?.toString();
      const confirmPassword = formData.get('confirmPassword')?.toString();

      // Validate inputs
      if (!email || !code || !password || !confirmPassword) {
        throw new Error('All fields are required');
      }

      if (!/^\d{6}$/.test(code)) {
        throw new Error('Invalid reset code format');
      }

      if (password.length < 8) {
        throw new Error('Password must be at least 8 characters long');
      }

      if (password !== confirmPassword) {
        throw new Error('Passwords do not match');
      }

      const response = await fetch('/api/auth/verify-reset-code', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email, code, password }),
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.error || 'Failed to verify reset code');
      }

      // Show success message
      formStatus?.classList.remove('hidden');
      successMessage?.classList.remove('hidden');
      if (successMessage) {
        successMessage.textContent = 'Password reset successfully! Redirecting to login...';
      }

      // Redirect to login after a short delay
      setTimeout(() => {
        window.location.href = '/login?message=' + encodeURIComponent('Password reset successfully. Please login with your new password.');
      }, 2000);

    } catch (error) {
      console.error('Verification error:', error);
      formStatus?.classList.remove('hidden');
      errorMessage?.classList.remove('hidden');
      if (errorMessage) {
        errorMessage.textContent = error instanceof Error ? error.message : 'Failed to verify reset code';
      }
    } finally {
      // Re-enable submit button
      submitButton.disabled = false;
      submitButton.textContent = 'Reset Password';
    }
  });
</script>