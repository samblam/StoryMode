---
import SurveyLayout from '../../components/SurveyLayout.astro';
import { supabase } from '../../lib/supabase';
import type { User } from '../../types/auth';

const surveyId = Astro.url.searchParams.get('id');
const user = Astro.locals.user as User | undefined;

// Redirect if not logged in
if (!user) {
    return Astro.redirect('/login');
}

// Redirect if no survey ID
if (!surveyId) {
    return new Response(JSON.stringify({ error: 'Survey ID is required' }), {
        status: 400,
    });
}

// Get survey data for title
const { data: survey, error } = await supabase
    .from('surveys')
    .select(`
        *,
        client:clients (
            id,
            name
        )
    `)
    .eq('id', surveyId)
    .single();

if (error) {
    return new Response(JSON.stringify({ error: error.message }), {
        status: 500,
    });
}

if (!survey) {
    return new Response(JSON.stringify({ error: 'Survey not found' }), {
        status: 404,
    });
}

const title = `Instructions - ${survey.client.name}`;
---

<SurveyLayout 
    title={title}
    description="Please read the instructions carefully and complete the sound test."
    currentStep={3}
    totalSteps={4}
>
    <div class="max-w-4xl mx-auto px-4 py-8">
        <div class="space-y-8">
            <!-- Task Instructions -->
            <div class="bg-white rounded-lg shadow-md p-6">
                <h2 class="text-2xl font-bold mb-4">Sound Matching Task</h2>
                <div class="prose max-w-none">
                    <p>In the next section, you will:</p>
                    <ol class="list-decimal list-inside space-y-2">
                        <li>Listen to four different sounds</li>
                        <li>Match each sound to its intended function</li>
                        <li>Provide your interpretation of each sound</li>
                    </ol>
                    
                    <h3 class="text-xl font-semibold mt-6 mb-3">Tips:</h3>
                    <ul class="list-disc list-inside space-y-2">
                        <li>Listen to each sound carefully before making your selection</li>
                        <li>You can play each sound as many times as needed</li>
                        <li>Consider how each sound might relate to a user interface action</li>
                        <li>There are no wrong answers - we value your honest interpretation</li>
                    </ul>
                </div>
            </div>

            <!-- Sound Test -->
            <div class="bg-white rounded-lg shadow-md p-6">
                <h2 class="text-2xl font-bold mb-4">Sound Test</h2>
                <p class="mb-4">Before proceeding, let's make sure your audio is working properly:</p>
                
                <div class="flex items-center space-x-4 mb-6">
                    <button
                        id="testSound"
                        class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                    >
                        Play Test Sound
                    </button>
                    <span id="soundStatus" class="text-gray-600">Click to test your audio</span>
                </div>
            </div>

            <!-- Confirmation -->
            <div class="bg-white rounded-lg shadow-md p-6">
                <div class="flex items-start space-x-3">
                    <input
                        type="checkbox"
                        id="confirmation"
                        class="mt-1 h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                    />
                    <label for="confirmation" class="text-gray-700">
                        I confirm that I can hear the test sound and understand the task instructions
                    </label>
                </div>
            </div>

            <!-- Navigation -->
            <div class="flex justify-between items-center mt-8">
                <a 
                    href={`/surveys/${surveyId}/video`}
                    class="inline-block px-6 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                >
                    Back
                </a>
                <button 
                    id="continueBtn"
                    disabled
                    class="px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                >
                    Start Test
                </button>
            </div>
        </div>
    </div>
</SurveyLayout>

<script>
    // Test sound setup
    const testSound = new Audio('/sounds/test-tone.mp3');
    const testButton = document.getElementById('testSound');
    const soundStatus = document.getElementById('soundStatus');
    let hasPlayedSound = false;

    testButton?.addEventListener('click', () => {
        testSound.play()
            .then(() => {
                if (soundStatus) {
                    soundStatus.textContent = 'Sound played successfully!';
                    soundStatus.className = 'text-green-600';
                }
                hasPlayedSound = true;
                updateContinueButton();
            })
            .catch((error) => {
                if (soundStatus) {
                    soundStatus.textContent = 'Error playing sound. Please check your audio settings.';
                    soundStatus.className = 'text-red-600';
                }
                console.error('Audio playback error:', error);
            });
    });

    // Confirmation checkbox
    const checkbox = document.getElementById('confirmation') as HTMLInputElement;
    const continueBtn = document.getElementById('continueBtn') as HTMLButtonElement;

    function updateContinueButton() {
        if (continueBtn) {
            continueBtn.disabled = !(hasPlayedSound && checkbox?.checked);
        }
    }

    checkbox?.addEventListener('change', updateContinueButton);

    // Handle continue button
    continueBtn?.addEventListener('click', () => {
        if (hasPlayedSound && checkbox?.checked) {
            const surveyId = new URLSearchParams(window.location.search).get('id');
            window.location.href = `/surveys/${surveyId}/matching`;
        }
    });
</script>

<style>
    .shadow-md {
        box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    }

    .prose {
        max-width: 65ch;
        color: #374151;
    }

    .prose h3 {
        color: #111827;
        margin-top: 1.6em;
        margin-bottom: 0.6em;
        line-height: 1.6;
    }

    .prose ul,
    .prose ol {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
    }

    .prose li {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
    }
</style>