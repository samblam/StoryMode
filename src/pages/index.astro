---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Story Mode | UX Sound Design">
  <main class="min-h-screen bg-white">
    <div class="max-w-6xl mx-auto px-4 py-24">
      <div class="mb-24">
        <h1 class="text-6xl font-editorial mb-8">
          Story Mode is a <em class="italic">(very)</em> fun<br>
          UX sound design studio in<br>
          Montreal, Quebec.<br><br>
          We specialize in making interactive audio unforgettable.
        </h1>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
        <div>
          <h2 class="text-4xl font-editorial mb-8">We're extremely good at:</h2>
          <ul class="text-2xl space-y-4">
            <li>- audio logos</li>
            <li>- UX sound design</li>
            <li>- experiential audio</li>
            <li>- original music composition</li>
            <li>- sonic identity discovery</li>
            <li>- singing in the shower</li>
          </ul>
        </div>
        
        <div class="flex items-center justify-center">
          <img src="/favicon.svg" alt="Story Mode Logo" class="w-48 h-48">
        </div>
      </div>

      <div class="mt-24 text-center">
        <h2 class="text-4xl font-editorial mb-8">
          don't be shy... <a href="/contact" class="underline hover:text-blue-600">say hi :)</a>
        </h2>
        
        <button
          id="test-db"
          class="bg-green-400 text-white px-6 py-3 rounded-lg text-lg hover:bg-green-500 transition-colors"
        >
          Test DB Connection
        </button>
        
        <p id="db-status" class="mt-4 text-lg hidden"></p>
      </div>
    </div>
  </main>
</Layout>

<script>
  function initializeDBTest() {
    const button = document.getElementById('test-db') as HTMLButtonElement;
    const status = document.getElementById('db-status');

    if (!button || !status) {
      console.error('Required elements not found');
      return;
    }

    button.addEventListener('click', async () => {
      try {
        button.disabled = true;
        button.classList.add('opacity-50', 'cursor-not-allowed');
        status.textContent = 'Testing connection...';
        status.classList.remove('hidden', 'text-red-600', 'text-green-600');
        status.classList.add('text-gray-600');

        const response = await fetch('/api/test-connection');
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const result = await response.json();

        if (result.success) {
          status.textContent = 'Connection successful! Database is working.';
          status.classList.remove('text-gray-600');
          status.classList.add('text-green-600');
        } else {
          throw new Error(result.error || 'Connection failed');
        }
      } catch (error) {
        console.error('Connection error:', error);
        status.textContent = `Connection failed: ${error instanceof Error ? error.message : 'Unknown error'}`;
        status.classList.remove('text-gray-600');
        status.classList.add('text-red-600');
      } finally {
        button.disabled = false;
        status.classList.remove('hidden');
      }
    });
  }

  // Initialize the DB test functionality
  initializeDBTest();
</script>