---
---
<script>
    console.log('authCheck.astro - Initializing');
    const setUser = async () => {
        console.log('authCheck.astro - setUser called');
        const token = document.cookie.split('; ').find(row => row.startsWith('sb-token='))?.split('=')[1];
        console.log('authCheck.astro - Token present:', !!token);
        if (!token) {
            const event = new CustomEvent('user', { detail: { user: null } });
            document.dispatchEvent(event);
            console.log('authCheck.astro - No token, dispatched user:null event');
            return;
        }
        try {
            console.log('authCheck.astro - Attempting to verify token...');
            const response = await fetch('/api/auth/test-token', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Cookie': `sb-token=${token}`
                },
                body: JSON.stringify({ token }),
            });
            console.log('authCheck.astro - Response from /api/auth/test-token', response);
            if (response.ok) {
                const result = await response.json();
                const event = new CustomEvent('user', { detail: { user: result.user } });
                document.dispatchEvent(event);
                 console.log('authCheck.astro - Token verified, dispatched user event', result.user);
                return;
            } else {
                const result = await response.json();
                console.error('authCheck.astro - Token verification failed', result);
            }
        } catch (error) {
            console.error('authCheck.astro - Error checking session:', error);
        }
        const event = new CustomEvent('user', { detail: { user: null } });
        document.dispatchEvent(event);
        console.log('authCheck.astro - Error or invalid token, dispatched user:null event');
    };

    setUser();
</script>