---
interface Props {
  surveyId: string;
}

const { surveyId } = Astro.props;
---

<div class="survey-preview">
  <button
    type="button"
    class="preview-button"
    data-survey-id={surveyId}
    onclick="previewSurvey(this.dataset.surveyId)"
  >
    Preview Survey
  </button>
</div>

<script>
  async function previewSurvey(surveyId: string) {
    try {
      // Get preview data
      const response = await fetch(`/api/surveys/${surveyId}/preview`);
      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.message || 'Failed to generate preview');
      }

      // Open preview in new window/tab
      const previewData = await response.json();
      const previewUrl = `/surveys/${surveyId}?preview=true&context=${encodeURIComponent(JSON.stringify(previewData))}`;
      window.open(previewUrl, '_blank');
    } catch (error) {
      console.error('Error previewing survey:', error);
      alert('Failed to generate survey preview. Please try again.');
    }
  }

  // Add event listener to preview button
  document.addEventListener('DOMContentLoaded', () => {
    const previewButtons = document.querySelectorAll('.preview-button');
    previewButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const surveyId = (e.target as HTMLButtonElement).dataset.surveyId;
        if (surveyId) {
          previewSurvey(surveyId);
        }
      });
    });
  });
</script>

<style>
  .survey-preview {
    margin: 1rem 0;
  }

  .preview-button {
    background-color: #4a5568;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    border: none;
    cursor: pointer;
    font-size: 0.875rem;
    transition: background-color 0.2s;
  }

  .preview-button:hover {
    background-color: #2d3748;
  }

  .preview-button:focus {
    outline: 2px solid #4299e1;
    outline-offset: 2px;
  }

  .preview-button:disabled {
    background-color: #cbd5e0;
    cursor: not-allowed;
  }
</style>