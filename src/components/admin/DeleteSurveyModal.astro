---
---

<div 
  id="delete-modal" 
  class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
>
  <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
    <h3 class="text-lg font-semibold mb-4">Delete Survey</h3>
    <p class="text-gray-600 mb-6">
      Are you sure you want to delete this survey? This action cannot be undone.
      All associated responses and data will be permanently deleted.
    </p>
    
    <div class="flex justify-end space-x-4">
      <button
        type="button"
        id="cancel-delete"
        class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
      >
        Cancel
      </button>
      <button
        type="button"
        id="confirm-delete"
        class="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors"
        data-survey-id=""
      >
        Delete Survey
      </button>
    </div>
  </div>
</div>

<script>
    declare global {
      interface Window {
        triggerDeleteModal: (surveyId: string) => void;
      }
    }
  
    const modal = document.getElementById('delete-modal');
    const cancelButton = document.getElementById('cancel-delete');
    const confirmButton = document.getElementById('confirm-delete') as HTMLButtonElement;
    let isDeleting = false;

  function showDeleteModal(surveyId: string) {
    if (modal && confirmButton) {
      modal.classList.remove('hidden');
      confirmButton.dataset.surveyId = surveyId;
    }
  }

  function hideDeleteModal() {
    if (modal) {
      modal.classList.add('hidden');
    }
  }

  if (confirmButton) {
    confirmButton.addEventListener('click', async () => {
      if (isDeleting) return;
      
      const surveyId = confirmButton.dataset.surveyId;
      if (!surveyId) return;

      try {
        isDeleting = true;
        confirmButton.textContent = 'Deleting...';
        confirmButton.disabled = true;

        const response = await fetch(`/api/surveys/${surveyId}/delete`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        });

        if (!response.ok) {
          throw new Error('Failed to delete survey');
        }

        window.location.reload();
      } catch (error) {
        console.error('Error deleting survey:', error);
        alert('Failed to delete survey. Please try again.');
      } finally {
        isDeleting = false;
        confirmButton.textContent = 'Delete Survey';
        confirmButton.disabled = false;
        hideDeleteModal();
      }
    });
  }

  cancelButton?.addEventListener('click', hideDeleteModal);

  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      hideDeleteModal();
    }
  });

  // Expose function to window
  window.triggerDeleteModal = showDeleteModal;
  (window as Window).triggerDeleteModal = showDeleteModal;
</script>