---
import { supabase } from '../../lib/supabase';
import SurveyActions from './SurveyActions.astro';
import DeleteSurveyModal from './DeleteSurveyModal.astro';
import type { Database } from '../../types/database';

// Fetch surveys with client information
const { data: surveys, error } = await supabase
  .from('surveys')
  .select(`
    *,
    clients (
      id,
      name
    )
  `)
  .order('created_at', { ascending: false });

if (error) {
  console.error('Error fetching surveys:', error);
}

type SurveyWithClient = Database['public']['Tables']['surveys']['Row'] & {
  clients?: {
    id: string;
    name: string;
  } | null;
};

function getStatusClasses(status: string): string {
  switch (status) {
    case 'active':
      return 'bg-green-100 text-green-800';
    case 'draft':
      return 'bg-gray-100 text-gray-800';
    case 'completed':
      return 'bg-blue-100 text-blue-800';
    default:
      return 'bg-gray-100 text-gray-800';
  }
}
---

<div class="space-y-6">
  {!surveys || surveys.length === 0 ? (
    <div class="text-center py-12">
      <p class="text-gray-500 text-lg">No surveys found.</p>
    </div>
  ) : (
    <div class="grid gap-4">
      {surveys.map((survey: SurveyWithClient) => (
        <div class="bg-white shadow rounded-lg p-6">
          <div class="flex items-center justify-between">
            <div class="flex-1">
              <div class="flex items-center space-x-4 mb-2">
                <h3 class="text-xl font-semibold">{survey.title}</h3>
                <span class={`px-2 py-1 rounded-full text-xs font-medium ${getStatusClasses(survey.status)}`}>
                  {survey.status}
                </span>
              </div>
              
              <div class="text-sm text-gray-600 space-y-1">
                <p>Client: {survey.clients?.name || 'No Client'}</p>
                <p>Created: {new Date(survey.created_at).toLocaleDateString()}</p>
                {survey.description && (
                  <p class="mt-2">{survey.description}</p>
                )}
              </div>
            </div>

            <div class="flex items-center space-x-4">
              <a
                href={`/admin/surveys/${survey.id}/edit`}
                class="inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
              >
                Edit
              </a>
              
              <button
                type="button"
                class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                onclick={`window.triggerDeleteModal('${survey.id}')`}
              >
                Delete
              </button>

              <SurveyActions surveyId={survey.id} status={survey.status} />
            </div>
          </div>
        </div>
      ))}
    </div>
  )}

  <DeleteSurveyModal />
</div>

<script>
  declare global {
    interface Window {
      triggerDeleteModal: (surveyId: string) => void;
    }
  }
</script>

<style>
  .shadow {
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  }
</style>