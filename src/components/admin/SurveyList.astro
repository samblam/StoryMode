---
import { supabase } from '../../lib/supabase';
import SurveyActions from './SurveyActions.astro';

// Fetch surveys with client information
const { data: surveys, error } = await supabase
  .from('surveys')
  .select(`
    *,
    clients (
      id,
      name
    )
  `)
  .order('created_at', { ascending: false });

if (error) {
  console.error('Error fetching surveys:', error);
}

---

<div class="space-y-4">
  {surveys && surveys.map((survey) => (
    <div class="bg-white shadow rounded-lg p-4 flex items-center justify-between">
      <div class="flex-1">
        <div class="flex items-center space-x-4">
          <div>
            <h3 class="text-lg font-semibold">{survey.title}</h3>
            <p class="text-sm text-gray-600">
              Client: {survey.clients?.name || 'No Client'}
            </p>
          </div>
          <span class={`px-2 py-1 rounded-full text-xs ${
            survey.status === 'active' ? 'bg-green-100 text-green-800' :
            survey.status === 'draft' ? 'bg-gray-100 text-gray-800' :
            'bg-blue-100 text-blue-800'
          }`}>
            {survey.status}
          </span>
        </div>
        <div class="mt-2 text-sm text-gray-500">
          Created: {new Date(survey.created_at).toLocaleDateString()}
        </div>
      </div>
      
      <div class="flex items-center space-x-4">
              <a
                href={`/admin/surveys/${survey.id}/edit`}
                class="text-blue-600 hover:text-blue-800 px-3 py-1 rounded"
              >
                Edit
              </a>
              <SurveyActions surveyId={survey.id} status={survey.status} />
            </div>
    </div>
  ))}
</div>

<script>
  // Handle delete button clicks
  document.querySelectorAll('[data-action="delete"]').forEach(button => {
    button.addEventListener('click', async (e) => {
      const surveyId = (e.currentTarget as HTMLButtonElement).dataset.surveyId;
      if (!surveyId) return;

      if (confirm('Are you sure you want to delete this survey?')) {
        try {
          const response = await fetch(`/api/surveys/${surveyId}`, {
            method: 'DELETE',
          });

          if (response.ok) {
            // Remove the survey from the DOM
            const surveyElement = (e.currentTarget as HTMLElement).closest('[data-survey-id]');
            surveyElement?.remove();
          } else {
            const error = await response.json();
            alert(`Failed to delete survey: ${error.message}`);
          }
        } catch (error) {
          console.error('Error deleting survey:', error);
          alert('Failed to delete survey. Please try again.');
        }
      }
    });
  });
</script>