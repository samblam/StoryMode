---
import '../styles/global.css';

interface Props {
  title: string;
}

const { title } = Astro.props;

// Access user from locals
const user = Astro.locals.user;
const isAdmin = user?.role === 'admin';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content="Story Mode is a cutting edge audio branding and UX sound design studio in Montreal, Canada." />
    <link href="https://fonts.googleapis.com/css2?family=Syne:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
  </head>
  <body>
    <header class="fixed w-full top-0 z-50 bg-green-400 text-white">
      <nav class="max-w-6xl mx-auto px-4 py-4 flex justify-between items-center">
        <a href="/" class="text-3xl font-editorial">Story Mode</a>
        <div class="space-x-8">
          <a href="/works" class="hover:underline">Works</a>
          <a href="/about" class="hover:underline">About</a>
          <a href="/blog" class="hover:underline">Blog</a>
          <a href="/contact" class="hover:underline">Contact</a>
          
          {user ? (
            <>
              <a href="/sounds" class="hover:underline">Sounds</a>
              {user.role === 'client' && <a href="/surveys/client-results" class="hover:underline">My Survey Results</a>}
              {isAdmin && (
                <>
                  <a href="/admin/surveys" class="hover:underline">Survey Management</a>
                  <a href="/create-user" class="hover:underline">Create User</a>
                </>
              )}
              <button
                id="logout-button"
                class="hover:underline text-white bg-transparent border-none cursor-pointer font-inherit"
                type="button"
              >
                <span id="logout-text">Logout ({user.email})</span>
              </button>
            </>
          ) : (
            <a href="/login" class="hover:underline">Login</a>
          )}
        </div>
      </nav>
    </header>

    <div class="h-20"></div>

    <slot />

    <footer class="bg-indigo-500 text-white py-4">
      <div class="max-w-6xl mx-auto px-4 text-center">
        <p>&copy; {new Date().getFullYear()} Story Mode</p>
      </div>
    </footer>

    <script>
      let isLoggingOut = false;
  
      document.getElementById('logout-button')?.addEventListener('click', async () => {
        // Prevent multiple logout attempts
        if (isLoggingOut) return;
        
        const button = document.getElementById('logout-button') as HTMLButtonElement;
        const textSpan = document.getElementById('logout-text');
        const originalText = textSpan?.textContent || '';
        
        try {
          isLoggingOut = true;
          
          // Update button state
          if (button && textSpan) {
            button.disabled = true;
            textSpan.textContent = 'Logging out...';
          }

          const response = await fetch('/api/auth/logout', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify({}), // Add empty body
          } as RequestInit);

          let data;
          try {
            data = await response.json();
          } catch (parseError) {
            console.error('Response parse error:', parseError);
            throw new Error('Invalid server response');
          }

          if (!response.ok) {
            throw new Error(data?.message || data?.error || `Logout failed: ${response.status}`);
          }

          // Clear local storage
          localStorage.removeItem('supabase.auth.token');
          localStorage.removeItem('supabase.auth.refreshToken');
          localStorage.removeItem('sb-access-token');
          localStorage.removeItem('sb-refresh-token');

          // Redirect to login page
          window.location.href = '/login';
        } catch (error) {
          console.error('Logout error:', error);
          
          // Reset button state
          if (button && textSpan) {
            button.disabled = false;
            textSpan.textContent = originalText;
          }

          // Show error to user
          alert(error instanceof Error ? error.message : 'Logout failed. Please try again.');
        } finally {
          isLoggingOut = false;
        }
      });
    </script>
  </body>
</html>